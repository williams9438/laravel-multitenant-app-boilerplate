version: '3'

#Docker Networks
networks:
  multitenant-app:

volumes:
  postgres_data:

#Docker Services
services:
  nginx:
    image: nginx:stable-alpine
    container_name: multitenant-app-nginx
    ports:
      - "82:80"
    volumes:
      - ./:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - postgres
    networks:
      - multitenant-app

  php:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: multitenant-app-php
    ports:
      - "9000:9000"
    env_file:
      - ./dev_env/.app.env
    environment:
      - XDG_CONFIG_HOME=/var/www/html 
    volumes:
      - ./:/var/www/html
    depends_on:
      - postgres
    networks:
      - multitenant-app

  postgres:
    image: postgres:13.0-alpine
    container_name: multitenant-app-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=multitenant-app
    networks:
      - multitenant-app

  node:
    build:
      context: .
      dockerfile: ./node.Dockerfile
    container_name: multitenant-app-node
    user: "1000:1000"
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    env_file:
      - ./dev_env/.app.env
    ports: 
      - "5173:5173"
    networks:
      - multitenant-app

  artisan:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: multitenant-app-artisan
    volumes:
      - ./:/var/www/html
    env_file:
      - ./dev_env/.app.env
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan', 'migrate', '--force']
    depends_on:
      - postgres
    networks:
      - multitenant-app

  redis:
    image: redis:4.0
    container_name: multitenant-app-redis
    ports:
      - "6379:6379"
    networks:
      - multitenant-app