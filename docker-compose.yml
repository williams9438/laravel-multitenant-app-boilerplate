version: '3'

networks:
  multitenant-app:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: multitenant-app_nginx
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - multitenant-app

  php:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: multitenant-app_php
    volumes:
      - ./:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - multitenant-app

  postgres:
    image: postgres:13.0-alpine
    container_name: multitenant-app-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=multitenant-app
    ports:
      - "5432:5432"

  composer:
    image: composer:latest
    user: "1000:1000"
    container_name: multitenant-app_composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - multitenant-app

  npm:
    image: node:16
    container_name: multitenant-app_npm
    user: "1000:1000"
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: multitenant-app_artisan
    volumes:
      - ./:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - multitenant-app

  redis:
    image: redis:4.0
    container_name: multitenant-app_redis
    ports:
      - "6379:6379"
    networks:
      - multitenant-app